{
	"metadata": {
		"version": 2
	},
	"application": {
		"name": "gr-demo-javarest-spring",
		"language": "JAVA_GRADLE",
		"artifact_store": {
			"type": "s3",
			"repositories": [
				{
					"category": "rc-packaging",
					"bucket": "guide-rails-calculi-rc"
				},
				{
					"category": "final-packaging",
					"bucket": "guide-rails-calculi-final"
				},
				{
					"category": "logs",
					"bucket": "guide-rails-calculi-logs"
				}
			]
		}
	},
	"pipeline": {
		"segments": [
			{
				"name": "Build",
				"segment_type": "build",
				"publish_attributes": {
					"publish": true,
					"docker_images": [
						{
							"repository": "guide-rails/((application.name))",
							"tags": [
								"((application.version))"
							],
							"docker_registry_alias_id": "d77256d4-0784-4b44-7a74-400b5d1d7ba7"
						}
					]
				},
				"exit_actions": {
					"default": {
						"fetch_logs": true,
						"code_analysis": {
							"publish": true,
							"properties": null
						},
						"delete_instances": true
					},
					"on_success": {
						"code_analysis": null
					},
					"on_failure": {
						"code_analysis": null
					},
					"on_abort": {
						"code_analysis": null
					}
				},
				"properties": [
					{
						"name": "gradle.user.home",
						"value": "${SEGMENT_BASE_DIR}/cache/.gradle",
						"description": "GRADLE_USER_HOME is set to ${SEGMENT_BASE_DIR}/cache/.gradle by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created"
					},
					{
						"name": "ivy.defaultCacheDir",
						"value": "${SEGMENT_BASE_DIR}/cache/.ivy",
						"description": "ivy cache directory is set to ${SEGMENT_BASE_DIR}/cache/.ivy by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created"
					},
					{
						"name": "maven.repo.local",
						"value": "${SEGMENT_BASE_DIR}/cache/.m2",
						"description": "maven local repository is set to ${SEGMENT_BASE_DIR}/cache/.m2 by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created"
					},
					{
						"name": "additional_properties_file",
						"value": "sonar-project.properties",
						"type": "string"
					}
				],
				"deployment_strategy": {},
				"application_init": {},
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"post_deployment_actions": {
					"loadbalancer": {}
				},
				"cache_info": {
					"paths": [
						"((gradle.user.home))",
						"((ivy.defaultCacheDir))",
						"((maven.repo.local))"
					]
				},
				"tasks": [
					{
						"name": "javarest",
						"steps": [
							{
								"name": "Build",
								"definition": "Build",
								"command": "./gradlew build --no-daemon\n\ncp build/test-results/test/TEST-com.calculi.springbootserver.math.MathControllerTest.xml test.xml\n\ncp build/reports/jacoco/test/jacocoTestReport.xml coverage.xml\n",
								"properties": null
							}
						],
						"docker_options": {
							"docker_registry_alias_id": "c2b3c4bd-4236-4f6b-4b8b-b7746e054600",
							"repository": "dockerhub-proxy/library/openjdk:11"
						}
					}
				]
			}
		],
		"exit_actions": {
			"default": {
				"fetch_logs": true,
				"code_analysis": {
					"publish": true,
					"properties": null
				},
				"delete_instances": true
			},
			"on_success": {
				"code_analysis": null
			},
			"on_failure": {
				"code_analysis": null
			},
			"on_abort": {
				"code_analysis": null
			}
		},
		"default_properties": [
			{
				"name": "consul.servicenmae",
				"value": "((application.name))",
				"type": "string"
			},
			{
				"name": "gr.helm.wait.timeout",
				"value": "5m",
				"type": "string"
			},
			{
				"name": "gr.snyk.enabled.scantypes",
				"value": "code",
				"type": "array"
			}
		],
		"deployment_files": [
			{
				"source_path": "ci/bin/start.sh",
				"target_path": "bin/start.sh"
			}
		],
		"application_init": {},
		"process": {
			"init": {},
			"stop": {},
			"pid": {}
		}
	},
	"organization": {
		"orgname": "Tutorial"
	},
	"infrastructure": {
		"stemcells": [
			{
				"alias": "ubuntu-trusty",
				"os": "ubuntu-trusty",
				"version": "latest"
			},
			{
				"alias": "ubuntu-xenial",
				"os": "ubuntu-xenial",
				"version": "latest"
			},
			{
				"alias": "windows1803",
				"os": "windows1803",
				"version": "latest"
			},
			{
				"alias": "windows2012R2",
				"os": "windows2012R2",
				"version": "latest"
			},
			{
				"alias": "default",
				"os": "ubuntu",
				"version": "18.04.5"
			},
			{
				"alias": "centos-7",
				"os": "centos-7",
				"version": "latest"
			}
		],
		"resources": [
			{
				"name": "pipeline",
				"image": {
					"name": "docker-registry.query.consul:443/pipeline-image-cli-gx-6989-test",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "deployment",
				"image": {
					"name": "docker-registry.query.consul:443/pipeline-image-cli-gx-6989-test",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "eks-tools",
				"image": {
					"name": "docker-registry.service.consul:443/pipeline-image-eks-tools",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "idgenerator",
				"image": {
					"name": "docker-registry.query.consul:443/gr-id-generator",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "emitter",
				"image": {
					"name": "docker-registry.query.consul:443/guide-rails-emitter-gx-6989-test",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "git-resource",
				"image": {
					"name": "docker-registry.query.consul:443/gr-git-resource",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "gerrit-resource",
				"image": {
					"name": "docker-registry.service.consul:443/gr-gerrit-resource",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "build-breaker",
				"image": {
					"name": "docker-registry.query.consul:443/gr-build-breaker",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "s3",
				"image": {
					"name": "docker-registry.query.consul:443/concourse-s3-resource",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "slack",
				"image": {
					"name": "docker-registry.query.consul:443/concourse-slack-resource",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "email",
				"image": {
					"name": "docker-registry.query.consul:443/gr-email-resource",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "sonar",
				"image": {
					"name": "docker-registry.query.consul:443/concourse-sonarqube-resource",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "time",
				"image": {
					"name": "docker-registry.query.consul:443/gr-time-resource",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "azure-blobstore",
				"image": {
					"name": "docker-registry.query.consul:443/concourse-azure-blobstore-resource",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "gr-gcs-resource",
				"image": {
					"name": "docker-registry.query.consul:443/gr-gcs-resource",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "veracode-scanner",
				"image": {
					"name": "docker-registry.query.consul:443/veracode-scanner",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "netsparker-scanner",
				"image": {
					"name": "docker-registry.service.consul:443/netsparker-scanner",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "docker-resource",
				"image": {
					"name": "docker-registry.query.consul:443/gr-docker-image",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			},
			{
				"name": "build",
				"image": {
					"name": "docker-registry.query.consul:443/pipeline-image-java-tools",
					"version": "latest",
					"location": "docker-registry.service.consul:443"
				}
			}
		],
		"notification_configurations": [],
		"vault": {},
		"concourse": {
			"address": "https://concourse-web.service.consul",
			"team": "main"
		},
		"mq": {},
		"bosh": {}
	}
}